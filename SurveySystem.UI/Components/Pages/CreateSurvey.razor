@page "/create-survey"
@using SurveySystem.DTO.DTO
@using SurveySystem.UI.Services
@inject SurveyService SurveyService
@inject NavigationManager NavigationManager

<h3>Create Survey</h3>

<EditForm Model="@surveyDto" OnValidSubmit="HandleValidSubmit" FormName="CreateSurveyForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
    <div>
        <label for="title">Title:</label>
        <InputText id="title" class="form-control" @bind-Value="surveyDto.Title" />
    </div>
    <div>
        <label for="description">Description:</label>
        <InputText id="description" class="form-control" @bind-Value="surveyDto.Description" />
    </div>
    <div>
        <label for="type">Type:</label>
        <InputSelect id="type" class="form-control" @bind-Value="surveyDto.Type">
            <option value="0">Survey Type 1</option>
            <option value="1">Survey Type 2</option>
        </InputSelect>
    </div>
    
    <button type="submit" class="btn btn-primary">Create Survey</button>
</EditForm>

@code {
    private SurveyCreateDto surveyDto = new SurveyCreateDto();

    private async Task HandleValidSubmit()
    {
        try
        {
            var createdSurvey = await SurveyService.CreateSurveyAsync(surveyDto);
            NavigationManager.NavigateTo($"/view-survey/{createdSurvey.Id}");
        }
        catch (Exception ex)
        {
            // Handle error (e.g., show a message to the user)
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
}